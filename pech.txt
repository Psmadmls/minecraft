<?php

#      _       ____   __  __ 
#     / \     / ___| |  \/  |
#    / _ \   | |     | |\/| |
#   / ___ \  | |___  | |  | |
#  /_/   \_\  \____| |_|  |_|
# The creator of this plugin was fernanACM.
# https://github.com/fernanACM

/**
 * declare(strict_types=1);: Esto declara que el código debe usar el modo estricto de tipos en PHP.
 * This declares that the code should use strict types mode in PHP.
 * 
 * namespace fernanACM\PluginForm;: Define el espacio de nombres en el que se encuentra la clase Main.
 * Defines the namespace in which the Main class is located.
 */
declare(strict_types=1);

namespace fernanACM\PluginForm;

use pocketmine\player\Player;
use pocketmine\plugin\PluginBase;
use pocketmine\utils\TextFormat as TF;
use pocketmine\command\CommandSender;
use pocketmine\command\Command;
use Vecnavium\FormsUI\SimpleForm;

/** ES: Define una clase llamada Main que extiende PluginBase, la clase base para todos los plugins de PocketMine. */
/** ENG: Defines a class called Main that extends PluginBase, the base class for all PocketMine plugins. */
class Main extends PluginBase{

    /**
     * ES: Este método se llama cuando el plugin se habilita. Aquí, simplemente imprime un mensaje de registro.
     * 
     * ENG: This method is called when the plugin is enabled. Here, it simply logs a message.
     * 
     * @return void
     */
    public function onEnable(): void{
        $this->getServer()->getLogger()->info("Esto es una prueba...");
    }

    /**
     * ES: Este método maneja los comandos del jugador. Si el comando es "/form", verifica si el remitente es un jugador. 
     * Si no lo es, envía un mensaje y devuelve falso. Luego, llama al método myForm().
     * 
     * ENG: This method handles player commands. If the command is "/form", it checks if the sender is a player. 
     * If not, it sends a message and returns false. Then, it calls the myForm() method.
     * 
     * @param CommandSender $sender
     * @param Command $command
     * @param string $label
     * @param array $args
     * @return boolean
     */
    public function onCommand(CommandSender $sender, Command $command, string $label, array $args): bool{
        switch($command->getName()){
            case "menu":
                if(!$sender instanceof Player){
                    $sender->sendMessage("Usa esto en el juego!");
                    return false;
                }
                // function
                $this->myForm($sender);
            break;
        }
        return true;        
    }

    /**
     * ES: Este método crea y envía un formulario simple al jugador. El formulario tiene un título, contenido y botones. 
     * Cuando el jugador selecciona un botón, se ejecuta una función de devolución de llamada que maneja la lógica 
     * según el botón presionado.
     * 
     * ENG: This method creates and sends a simple form to the player. The form has a title, content, and buttons. 
     * When the player selects a button, a callback function is executed that handles the logic based on the pressed button.
     * 
     * @param Player $player
     * @return void
     */
    public function myForm(Player $player): void {

        $form = new SimpleForm(function(Player $player, $data){
            if(is_null($data)){
                // NULL
                $player->sendMessage(self::getPrefix(). TF::colorize("&cคุณได้ปิดuiแล้ว"));
                return;
            }
            switch($data){
                case 0: // MSJ 1
                    $player->sendMessage(self::getPrefix(). TF::colorize("&eกำลังโหลด....."));
                    $player->getServer()->dispatchCommand($player, "transferme 147.50.252.54 19132");
            }
        });

        $form->setTitle(TF::colorize("&lpec:ui"));
        //$form->setContent(TF::colorize("&eสวัสดีครับ:"));
        $form->addButton(TF::colorize("&lserver"), 0, "textures/items/diamond");
        $player->sendForm($form);
    }

    public function getPlayerCountFromServer(string $host, int $port): int {
        // ดึงข้อมูลจำนวนผู้เล่นจากเซิร์ฟเวอร์ที่ระบุ
        // เปลี่ยนเป็นโค้ดที่ใช้ฟังก์ชันที่รองรับการดึงข้อมูลจำนวนผู้เล่นจากเซิร์ฟเวอร์ Minecraft
        // ตัวอย่างที่กำหนดจำนวนผู้เล่นเป็น 10
        return 10;
    }

    /**
     * ES: Este método devuelve un prefijo de color utilizado para formatear los mensajes del plugin.
     * 
     * ENG: This method returns a color prefix used to format plugin messages.
     * 
     * @return string
     */
    public static function getPrefix(): string{
        return TF::colorize("&l&aปิด: ");
    }
}
